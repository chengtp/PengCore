<?xml version="1.0" encoding="utf-8"?>
<configuration>

  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  </configSections>

  <log4net>

    <logger name="mvclog" additivity="false">
      <!--additivity 是否确认子日志对象继承父日志对象的appender列表，默认为True:-->
      <!--注意优先级，优先级低的要放在后面-->
      <level value="DEBUG"/>
      <appender-ref ref="MyRollingLogFileAppender"/>
    </logger>

    <logger name="logData" additivity="false">
      <!--additivity 是否确认子日志对象继承父日志对象的appender列表，默认为True:-->
      <!--注意优先级，优先级低的要放在后面-->
      <level value="DEBUG"/>
      <appender-ref ref="AdoNetAppender"/>
    </logger>


    <!-- 定义输出到文件中1 fatal error -->
    <appender name="MyRollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
      <!--定义文件存放位置-->
      <!--<file value="D:\\log\\dataPool\\"/>-->
      <file value="Logs\\dataPool\\fatalAndError\\"/>
      <appendToFile value="true"/>
      <rollingStyle value="Date"/>
      <datePattern value="yyyy\\yyyyMM\\yyyyMMdd'.log'"/>
      <staticLogFileName value="false"/>
      <param name="MaxSizeRollBackups" value="100"/>
      <layout type="log4net.Layout.PatternLayout">
        <!--每条日志末尾的文字说明-->
        <!--输出格式-->
        <!--样例：2012-03-26 13:42:32,111 [10] INFO  Log4NetDemo.MainClass [(null)] - info-->
        <conversionPattern value="%newline %n记录时间：%date %n线程ID:[%thread] %n日志级别：  %-5level %n出错类：%logger property: [%property{NDC}] - %n错误描述：%message%newline %n"/>
      </layout>

      <!-- 过滤指定级别之间的日志-->
      <filter type="log4net.Filter.LevelRangeFilter">
        <levelMin value="ERROR"/>
        <levelMax value="FATAL"/>
      </filter>
    </appender>


    <!-- 定义输出到文件中2 warn -->
    <appender name="warnRollingFileAppender" type="log4net.Appender.RollingFileAppender" >
      <!-- 旧日志文件自动重命名并生成新日志文件-->
      <preserveLogFileNameExtension value="true" />
      <!-- 日志的路径-->
      <file value="D:\\log\\www.iboyaa.com\\"/>
      <!-- 是否覆盖，默认是追加true-->
      <appendToFile value="true"/>
      <!-- 混合使用日期和文件大小变换日志文件名，rollingStyle的值共有Once、Size、Date、Composite四种-->
      <rollingStyle value="Date"/>
      <!-- 日期的格式-->
      <datePattern value="yyyy\\yyyyMM\\yyyyMMdd'.log'"/>
      <!-- 最大变换数量-->
      <maxSizeRollBackups value="1000"/>
      <!-- 最大文件大小-->
      <maximumFileSize value="100KB"/>
      <!-- 名称是否可以更改，false为可以更改-->
      <staticLogFileName value="false"/>
      <layout type="log4net.Layout.PatternLayout">
        <!-- 日志会话开始输出的文字-->
        <header value="开始"/>
        <!-- 日志会话输出的详细信息-->
        <conversionPattern value="%n记录时间：%d %n线程ID:[%t] %n日志级别：%-5p %n出错类：%c property:[%property{NDC}] - %n错误描述：%m%n"/>
        <!-- 日志会话结束输出的文字-->
        <footer value="结束"/>
      </layout>

      <!-- 过滤指定级别的日志-->
      <!--<filter type="log4net.Filter.LevelMatchFilter">
        <levelToMatch value="Warn" />
      </filter>-->

      <!-- 过滤指定级别之间的日志-->
      <filter type="log4net.Filter.LevelRangeFilter">
        <levelMin value="Warn"/>
        <levelMax value="Warn"/>
      </filter>

    </appender>


    <!-- 定义输出到文件中3 info debug -->
    <appender name="infoDebugRollingFileAppender" type="log4net.Appender.RollingFileAppender" >
      <!-- 旧日志文件自动重命名并生成新日志文件-->
      <preserveLogFileNameExtension value="true" />
      <!-- 日志的路径-->
      <file value="Logs\InfoAndDebug.log"/>
      <!-- 是否覆盖，默认是追加true-->
      <appendToFile value="true"/>
      <!-- 混合使用日期和文件大小变换日志文件名，rollingStyle的值共有Once、Size、Date、Composite四种-->
      <rollingStyle value="Date"/>
      <!-- 日期的格式-->
      <datePattern value="yyyyMMddHHmm" />
      <!-- 最大变换数量-->
      <maxSizeRollBackups value="1000"/>
      <!-- 最大文件大小-->
      <maximumFileSize value="100KB"/>
      <!-- 名称是否可以更改，false为可以更改-->
      <staticLogFileName value="false"/>
      <layout type="log4net.Layout.PatternLayout">
        <!-- 日志会话开始输出的文字-->
        <header value="开始"/>
        <!-- 日志会话输出的详细信息-->
        <conversionPattern value="%n记录时间：%d %n线程ID:[%t] %n日志级别：%-5p %n出错类：%c property:[%property{NDC}] - %n错误描述：%m%n"/>
        <!-- 日志会话结束输出的文字-->
        <footer value="结束"/>
      </layout>

      <!-- 过滤指定级别之间的日志-->
      <filter type="log4net.Filter.LevelRangeFilter">
        <levelMin value="debug"/>
        <levelMax value="info"/>
      </filter>

    </appender>


    <!-- sql 数据库 -->
    <appender name="AdoNetAppender" type="log4net.Appender.AdoNetAppender">
      <!-- 缓存数 -->
      <bufferSize value="1" />
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <connectionString value="data source=.;initial catalog=MEF;integrated security=false;persist security info=True;User ID=test;Password=test" />
      <commandText value="INSERT INTO Log ([Date],[Thread],[Level],[Logger],[Message],[Exception]) VALUES (@log_date, @thread, @log_level, @logger, @message, @exception)" />
      <parameter>
        <parameterName value="@log_date" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.RawTimeStampLayout" />
      </parameter>
      <parameter>
        <parameterName value="@thread" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%thread" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@log_level" />
        <dbType value="String" />
        <size value="50" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%level" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@logger" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%logger" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@message" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%message" />
        </layout>
      </parameter>
      <parameter>
        <parameterName value="@exception" />
        <dbType value="String" />
        <size value="2000" />
        <layout type="log4net.Layout.ExceptionLayout" />
      </parameter>

      <!-- 过滤指定级别之间的日志-->
      <filter type="log4net.Filter.LevelRangeFilter">
        <levelMin value="ERROR"/>
        <levelMax value="FATAL"/>
      </filter>

    </appender>


    <!-- 控制台前台显示日志 -->
    <appender name="ColoredConsoleAppender" type="log4net.Appender.ColoredConsoleAppender">
      <mapping>
        <level value="ERROR" />
        <foreColor value="Red, HighIntensity" />
      </mapping>
      <mapping>
        <level value="Info" />
        <foreColor value="Green" />
      </mapping>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%n%date{HH:mm:ss,fff} [%-5level] %m" />
      </layout>

      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="Info" />
        <param name="LevelMax" value="Fatal" />
      </filter>
    </appender>


    <!--定义邮件发送-->
    <appender name="SmtpAppender" type="log4net.Appender.SmtpAppender">
      <authentication value="Basic" />
      <to value="97372483@qq.com" />
      <from value="chengtianpengjob@163.com" />
      <username value="chengtianpengjob@163.com" />
      <password value="Cheng123456" />
      <subject value="应用错误日志消息" />
      <smtpHost value="smtp.163.com" />
      <bufferSize value="1" />
      <enableSsl value="true" />
      <port value="25" />
      <!--超长部分是否丢弃-->
      <lossy value="true" />
      <!--日志级别 大于 WARN 的才发邮件-->
      <evaluator type="log4net.Core.LevelEvaluator">
        <threshold value="fatal"/>
      </evaluator>
      <!--定义邮件的格式-->
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%property{log4net:HostName} :: %level :: %message %newlineLogger: %logger%newlineThread: %thread%newlineDate: %date%newlineNDC: %property{NDC}%newline%newline" />
      </layout>
    </appender>






    <!--FATAL > ERROR > WARN > INFO > DEBUG

        0.当出现 fatal 级别，则 发送邮件

        1. 当出现 fatal 和 error 级别 ，则 写入数据库 和  A日志文件中。

        2. 当出现 warn 级别， 则 写入到B 日志文件中

        3. 但出现 info 和 debug 时候，则写入到 C 日志文件 中-->

    <root>
      <!--(高) OFF > FATAL > ERROR > WARN > INFO > DEBUG > ALL (低) -->
      <level value="ALL" />
      <!--日志文件1 fatal和error -->
      <appender-ref ref="MyRollingLogFileAppender" />
      <!--日志文件2 warn -->
      <appender-ref ref="warnRollingFileAppender" />
      <!--日志文件2 info debug -->
      <appender-ref ref="infoDebugRollingFileAppender" />
      <!--数据库 fatal和error  -->
      <appender-ref ref="AdoNetAppender" />
      <!--发送邮件  -->
      <appender-ref ref="SmtpAppender" />
      <!--<appender-ref ref="ColoredConsoleAppender" />-->
    </root>


  </log4net>

</configuration>
